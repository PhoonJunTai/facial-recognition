apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: facial-recog-pipeline # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/description: "Add Facial Recognition code to AI Core"
    scenarios.ai.sap.com/name: "Facial-Recognition" # Scenario name should be the use case
    executables.ai.sap.com/description: "Train with image data"
    executables.ai.sap.com/name: "training" # Executable name should describe the workflow in the use case
    artifacts.ai.sap.com/facialdataset.kind: "dataset" # Helps in suggesting the kind of inputs that can be attached.
    artifacts.ai.sap.com/facialmodel.kind: "model" # Helps in suggesting the kind of artifact that can be generated.
  labels:
    scenarios.ai.sap.com/id: "facial-recognition-dataline"
    ai.sap.com/version: "1.0"
spec:
  imagePullSecrets:
    - name: credsyk # your docker registry secret
  entrypoint: mypipeline
  templates:
  - name: mypipeline
    steps:
    - - name: mypredictor
        template: mycodeblock1
  - name: mycodeblock1
    metadata:
        labels:
            ai.sap.com/resourcePlan: infer.l
    inputs:
      artifacts:  # placeholder for cloud storage attachements
        - name: facialdataset # a name for the placeholder
          path: /app/data/ # where to copy in the Dataset in the Docker image
    outputs:
      artifacts:
        - name: facialmodel # local identifier name to the workflow
          globalName: facialmodel # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<executaion_id>/facemodel`. Also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
    container:
      image: docker.io/yeekhee/facial-recognition-test:02 # Your docker image name
      command: ["/bin/sh", "-c"]
      args:
        - "python /app/src/main.py"
